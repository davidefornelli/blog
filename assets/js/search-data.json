{
  
    
        "post0": {
            "title": "Chef Recipe | Extractive summarization with Azure Text Analytics",
            "content": ". Code . Modules . Chef . 400: Invalid request . Ingredients . 400: Invalid request . Call graph . . Notebook . Notes . . Warning: The following example is based on specific commits . . Chef commit: ac2a18c678a457b59535272a8d95cdc0c58ea02c | . | Ingredients commit: b01c0ab18d3d50d7e2836b71e22749e805fadac6 | . | . Configuration . # GitHub username gist_user = &#39;davidefornelli&#39; # Import Chef gist gist_chef_id = &#39;1bc116f05d09e598a1a2dcfbb0e2fc22&#39; # Import Ingredients gist gist_ingredients_id = &#39;5c75b7cdea330d15dcd93adbb08648c3&#39; . Import modules . import httpimport gist_url_chef = f&quot;https://gist.githubusercontent.com/{gist_user}/{gist_chef_id}/raw&quot; gist_ingredients_url = f&quot;https://gist.githubusercontent.com/{gist_user}/{gist_ingredients_id}/raw&quot; with httpimport.remote_repo([&#39;chef&#39;], gist_url_chef): import chef chef.process_ingredients( gist_ids=[(gist_ingredients_id, [&#39;az_cs_summarization.py&#39;])] ) with httpimport.remote_repo([&#39;az_cs_summarization&#39;], gist_ingredients_url): import az_cs_summarization . Collecting azure-ai-textanalytics==5.2.0b2 Using cached azure_ai_textanalytics-5.2.0b2-py2.py3-none-any.whl (231 kB) Collecting msrest&gt;=0.6.21 Using cached msrest-0.6.21-py2.py3-none-any.whl (85 kB) Requirement already satisfied: six&gt;=1.11.0 in /home/daforne/repos/github/davidefornelli/blog/.venv/lib/python3.7/site-packages (from azure-ai-textanalytics==5.2.0b2) (1.16.0) Collecting azure-common~=1.1 Using cached azure_common-1.1.27-py2.py3-none-any.whl (12 kB) Collecting azure-core&lt;2.0.0,&gt;=1.19.1 Using cached azure_core-1.20.1-py2.py3-none-any.whl (177 kB) Collecting requests&gt;=2.18.4 Using cached requests-2.26.0-py2.py3-none-any.whl (62 kB) Collecting requests-oauthlib&gt;=0.5.0 Using cached requests_oauthlib-1.3.0-py2.py3-none-any.whl (23 kB) Collecting certifi&gt;=2017.4.17 Using cached certifi-2021.10.8-py2.py3-none-any.whl (149 kB) Collecting isodate&gt;=0.6.0 Using cached isodate-0.6.0-py2.py3-none-any.whl (45 kB) Collecting charset-normalizer~=2.0.0 Using cached charset_normalizer-2.0.7-py3-none-any.whl (38 kB) Collecting urllib3&lt;1.27,&gt;=1.21.1 Using cached urllib3-1.26.7-py2.py3-none-any.whl (138 kB) Collecting idna&lt;4,&gt;=2.5 Using cached idna-3.3-py3-none-any.whl (61 kB) Collecting oauthlib&gt;=3.0.0 Using cached oauthlib-3.1.1-py2.py3-none-any.whl (146 kB) Installing collected packages: urllib3, idna, charset-normalizer, certifi, requests, oauthlib, requests-oauthlib, isodate, msrest, azure-core, azure-common, azure-ai-textanalytics Successfully installed azure-ai-textanalytics-5.2.0b2 azure-common-1.1.27 azure-core-1.20.1 certifi-2021.10.8 charset-normalizer-2.0.7 idna-3.3 isodate-0.6.0 msrest-0.6.21 oauthlib-3.1.1 requests-2.26.0 requests-oauthlib-1.3.0 urllib3-1.26.7 . texts = [ &#39;&#39;&#39; A computer is a machine that can be programmed to carry out sequences of arithmetic or logical operations automatically. Modern computers can perform generic sets of operations known as programs. These programs enable computers to perform a wide range of tasks. A computer system is a &quot;complete&quot; computer that includes the hardware, operating system (main software), and peripheral equipment needed and used for &quot;full&quot; operation. This term may also refer to a group of computers that are linked and function together, such as a computer network or computer cluster. A broad range of industrial and consumer products use computers as control systems. Simple special-purpose devices like microwave ovens and remote controls are included, as are factory devices like industrial robots and computer-aided design, as well as general-purpose devices like personal computers and mobile devices like smartphones. Computers power the Internet, which links hundreds of millions of other computers and users. Early computers were meant to be used only for calculations. Simple manual instruments like the abacus have aided people in doing calculations since ancient times. Early in the Industrial Revolution, some mechanical devices were built to automate long tedious tasks, such as guiding patterns for looms. More sophisticated electrical machines did specialized analog calculations in the early 20th century. The first digital electronic calculating machines were developed during World War II. The first semiconductor transistors in the late 1940s were followed by the silicon-based MOSFET (MOS transistor) and monolithic integrated circuit (IC) chip technologies in the late 1950s, leading to the microprocessor and the microcomputer revolution in the 1970s. The speed, power and versatility of computers have been increasing dramatically ever since then, with transistor counts increasing at a rapid pace (as predicted by Moore&#39;s law), leading to the Digital Revolution during the late 20th to early 21st centuries. Conventionally, a modern computer consists of at least one processing element, typically a central processing unit (CPU) in the form of a microprocessor, along with some type of computer memory, typically semiconductor memory chips. The processing element carries out arithmetic and logical operations, and a sequencing and control unit can change the order of operations in response to stored information. Peripheral devices include input devices (keyboards, mice, joystick, etc.), output devices (monitor screens, printers, etc.), and input/output devices that perform both functions (e.g., the 2000s-era touchscreen). Peripheral devices allow information to be retrieved from an external source and they enable the result of operations to be saved and retrieved. &#39;&#39;&#39; ] summary_text = az_cs_summarization.summarize( texts=texts, cs_endpoint=&#39;https://westus2.api.cognitive.microsoft.com/&#39;, cs_key=&#39;&#39;, language=&#39;en&#39; ) print(summary_text) . ClientAuthenticationError Traceback (most recent call last) ~/repos/github/davidefornelli/blog/.venv/lib/python3.7/site-packages/azure/ai/textanalytics/_text_analytics_client.py in begin_analyze_actions(self, documents, actions, **kwargs) 1072 continuation_token=continuation_token, -&gt; 1073 **kwargs 1074 ) ~/repos/github/davidefornelli/blog/.venv/lib/python3.7/site-packages/azure/ai/textanalytics/_generated/_operations_mixin.py in begin_analyze(self, body, **kwargs) 110 mixin_instance._deserialize = Deserializer(self._models_dict(api_version)) --&gt; 111 return mixin_instance.begin_analyze(body, **kwargs) 112 ~/repos/github/davidefornelli/blog/.venv/lib/python3.7/site-packages/azure/core/tracing/decorator.py in wrapper_use_tracer(*args, **kwargs) 82 if span_impl_type is None: &gt; 83 return func(*args, **kwargs) 84 ~/repos/github/davidefornelli/blog/.venv/lib/python3.7/site-packages/azure/ai/textanalytics/_generated/v3_2_preview_2/operations/_text_analytics_client_operations.py in begin_analyze(self, body, **kwargs) 541 cls=lambda x,y,z: x, --&gt; 542 **kwargs 543 ) ~/repos/github/davidefornelli/blog/.venv/lib/python3.7/site-packages/azure/ai/textanalytics/_generated/v3_2_preview_2/operations/_text_analytics_client_operations.py in _analyze_initial(self, body, **kwargs) 480 if response.status_code not in [200, 202]: --&gt; 481 map_error(status_code=response.status_code, response=response, error_map=error_map) 482 raise HttpResponseError(response=response) ~/repos/github/davidefornelli/blog/.venv/lib/python3.7/site-packages/azure/core/exceptions.py in map_error(status_code, response, error_map) 104 error = error_type(response=response) --&gt; 105 raise error 106 ClientAuthenticationError: (401) Access denied due to invalid subscription key or wrong API endpoint. Make sure to provide a valid key for an active subscription and use a correct regional API endpoint for your resource. Code: 401 Message: Access denied due to invalid subscription key or wrong API endpoint. Make sure to provide a valid key for an active subscription and use a correct regional API endpoint for your resource. During handling of the above exception, another exception occurred: ClientAuthenticationError Traceback (most recent call last) /tmp/ipykernel_31202/3955493862.py in &lt;module&gt; 13 cs_endpoint=&#39;https://westus2.api.cognitive.microsoft.com/&#39;, 14 cs_key=&#39;&#39;, &gt; 15 language=&#39;en&#39; 16 ) 17 https://gist.githubusercontent.com/davidefornelli/5c75b7cdea330d15dcd93adbb08648c3/raw/az_cs_summarization.py in summarize(texts, cs_endpoint, cs_key, language) ~/repos/github/davidefornelli/blog/.venv/lib/python3.7/site-packages/azure/core/tracing/decorator.py in wrapper_use_tracer(*args, **kwargs) 81 span_impl_type = settings.tracing_implementation() 82 if span_impl_type is None: &gt; 83 return func(*args, **kwargs) 84 85 # Merge span is parameter is set, but only if no explicit parent are passed ~/repos/github/davidefornelli/blog/.venv/lib/python3.7/site-packages/azure/ai/textanalytics/_text_analytics_client.py in begin_analyze_actions(self, documents, actions, **kwargs) 1082 1083 except HttpResponseError as error: -&gt; 1084 process_http_response_error(error) ~/repos/github/davidefornelli/blog/.venv/lib/python3.7/site-packages/azure/ai/textanalytics/_response_handlers.py in process_http_response_error(error) 58 if error.status_code == 401: 59 raise_error = ClientAuthenticationError &gt; 60 raise raise_error(response=error.response, error_format=CSODataV4Format) 61 62 ClientAuthenticationError: (401) Access denied due to invalid subscription key or wrong API endpoint. Make sure to provide a valid key for an active subscription and use a correct regional API endpoint for your resource. Code: 401 Message: Access denied due to invalid subscription key or wrong API endpoint. Make sure to provide a valid key for an active subscription and use a correct regional API endpoint for your resource. .",
            "url": "https://davidefornelli.com/jupyter/recipe/azuretextanalytics/azure/python/2021/11/11/nb_chef_recipe_cs_summarization.html",
            "relUrl": "/jupyter/recipe/azuretextanalytics/azure/python/2021/11/11/nb_chef_recipe_cs_summarization.html",
            "date": " • Nov 11, 2021"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About",
          "content": "🐱‍💻Github . davidefornelli . | | . 🐱‍🏍WakaTime . @davidefornelli . . 🐱‍👓LinkedIn . Davide Fornelli . 🐱‍🚀Spotify . Songs of the week . 400: Invalid request .",
          "url": "https://davidefornelli.com/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://davidefornelli.com/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}